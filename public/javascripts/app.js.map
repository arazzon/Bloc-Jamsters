{"version":3,"sources":["app/scripts/album.js","app/scripts/app.js","app/scripts/collection.js","app/scripts/landing.js"],"names":[],"mappingsxIA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtEA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAAA","file":"public/javascripts/app.js","sourcesContent":[" // Example Album\n var albumPicasso = {\n   name: 'The Colors',\n   artist: 'Pablo Picasso',\n   label: 'Cubism',\n   year: '1881',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Blue', length: '4:26' },\n       { name: 'Green', length: '3:14' },\n       { name: 'Red', length: '5:01' },\n       { name: 'Pink', length: '3:21'},\n       { name: 'Magenta', length: '2:15'}\n     ]\n };\n\n // Another Example Album\n var albumMarconi = {\n   name: 'The Telephone',\n   artist: 'Guglielmo Marconi',\n   label: 'EM',\n   year: '1909',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Hello, Operator?', length: '1:01' },\n       { name: 'Ring, ring, ring', length: '5:01' },\n       { name: 'Fits in your pocket', length: '3:21'},\n       { name: 'Can you hear me now?', length: '3:14' },\n       { name: 'Wrong phone number', length: '2:15'}\n     ]\n };\n\nvar currentlyPlayingSong = null;\nvar createSongRow = function(songNumber, songName, songLength) {\n   var template =\n       '<tr>'\n     + '  <td class=\"song-number col-md-1\" data-song-number=\"' + songNumber + '\">' + songNumber + '</td>'\n     + '  <td class=\"col-md-9\">' + songName + '</td>'\n     + '  <td class=\"col-md-2\">' + songLength + '</td>'\n     + '</tr>'\n     ;\n\n   // Instead of returning the row immediately, we'll attach hover\n  // functionality to it first.\n   var $row = $(template);\n\n // Change from a song number to play button when the song isn't playing and we hover over the row.\n   var onHover = function(event) {\n     var songNumberCell = $(this).find('.song-number');\n     var songNumber = songNumberCell.data('song-number');\n    if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n    }\n   };\n\n   var offHover = function(event) {\n     var songNumberCell = $(this).find('.song-number');\n     var songNumber = songNumberCell.data('song-number');\n      if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html(songNumber);\n    }\n   };\n\n // Toggle the play, pause, and song number based on the button clicked.\n   var clickHandler = function(event) {\n     var songNumber = $(this).data('song-number');\n\n      if (currentlyPlayingSong !== null) {\n       // Revert to song number for currently playing song because user started playing new song.\n       currentlyPlayingCell = $('.song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n       currentlyPlayingCell.html(currentlyPlayingSong);\n     }\n\n     if (currentlyPlayingSong !== songNumber) {\n       // Switch from Play -> Pause button to indicate new song is playing.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n       currentlyPlayingSong = songNumber;\n     }\n     else if (currentlyPlayingSong === songNumber) {\n       // Switch from Pause -> Play button to pause currently playing song.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n       currentlyPlayingSong = null;\n     }\n   };\n\n\n   $row.find('.song-number').click(clickHandler);\n   $row.hover(onHover, offHover);\n   return $row;\n };\n\n\nvar changeAlbumView = function(album) {\n   // Update the album title\n   var $albumTitle = $('.album-title');\n   $albumTitle.text(album.name);\n\n   // Update the album artist\n   var $albumArtist = $('.album-artist');\n   $albumArtist.text(album.artist);\n\n   // Update the meta information\n   var $albumMeta = $('.album-meta-info');\n   $albumMeta.text(album.year + \" on \" + album.label);\n\n   // Update the album image\n   var $albumImage = $('.album-image img');\n   $albumImage.attr('src', album.albumArtUrl);\n\n   // Update the Song List\n   var $songList = $(\".album-song-listing\");\n   $songList.empty();\n   var songs = album.songs;\n   for (var i = 0; i < songs.length; i++) {\n     var songData = songs[i];\n     var $newRow = createSongRow(i + 1, songData.name, songData.length);\n     $songList.append($newRow);\n   }\n\n };\n\n// This 'if' condition is used to prevent the jQuery modifications\n// from happening on non-Album view pages.\n//  - Use a regex to validate that the url has \"/album\" in its path.\n\nif (document.URL.match(/\\/album.html/)) {\n // Wait until the HTML is fully processed.\n\n\t$(document).ready(function() {\n\n\t    changeAlbumView(albumPicasso);\n    });\n}\n\n\n\n","\nrequire(\"./landing\");\nrequire('./collection');\n require('./album');","\n\nvar buildAlbumThumbnail = function() {\n\tvar template =\n\t  '<div class=\"collection-album-container col-md-2\">'\n\t+ '\t\t<div class=\"collection-album-image-container\">'\n\t+ '\t\t\t<img src=\"/images/album-placeholder.png\">'\n\t+ '\t\t</div>'\n\t+ '\t\t<div class=\"caption album-collection-info\">'\n\t+ '\t\t\t<p>'\n\t+ '\t\t\t\t<a class=\"album-name\" href=\"/album.html\">Album Name</a>'\n\t+ '\t\t\t\t<br />'\n\t+ '\t\t\t\t<a href=\"/album.html\">Artist name</a>'\n\t+ '\t\t\t\t<br />'\n\t+ '\t\t\t\tX songs'\n\t+ '\t\t\t\t<br/>'\n\t+ '\t\t\t</p>'\n\t+ '\t\t</div>'\n\t+ '\t</div>';\n\n\treturn $(template);\n};\n\nvar buildAlbumOverlay = function(albumURL) {\n\tvar template =\n\t\t\t'<div class=\"collection-album-image-overlay\">'\n\t\t+\t' <div class=\"collection-overlay-content\">'\n\t\t+\t'   <a class=\"collection-overlay-button\" href=\"' + albumURL + '\">'\n\t\t+\t'    <i class=\"fa fa-play\"></i>'\n\t\t+\t'   </a>'\n\t\t+\t'\t\t&nbsp;'\n\t\t+ '   <a class=\"collection-overlay-button\">'\n\t\t+ '\t\t\t<i class=\"fa fa-plus\"></i>'\n\t\t+ '   </a>'\n\t\t+\t' </div>'\n\t\t+\t'</div>';\n\n\treturn $(template);\n};\n\nvar updateCollectionView = function() {\n\tvar $collection = $('.collection-container .row');\n\t$collection.empty();\n\n\tvar albumAmount = Math.floor((Math.random() * (100 - 25)) + 25);\n\tconsole.log(\"Number of albums:\" + albumAmount);\n\n\n\tfor (var i = 0; i < albumAmount; i++) {\n\t\tvar $newThumbnail = buildAlbumThumbnail();\n\t\t$collection.append($newThumbnail);\n\t}\n\n\tvar onHover = function(event) {\n\t\t$(this).append(buildAlbumOverlay('/album.html'));\n\t};\n\n\tvar offHover = function(event) {\n\t\t$(this).find('.collection-album-image-overlay').remove();\n\t};\n\n\t$collection.find('.collection-album-image-container').hover(onHover, offHover);\n};\n\nif (document.URL.match(/\\/collection.html/)) {\n\t//Wait until HTML is fully processed\n\t$(document).ready(function() {\n\t\tupdateCollectionView();\n\t});\n}\n","$(document).ready(function() {\n\n    $('.hero-content h3').click(function(){\n      var subText = $(this).text();\n      $(this).text(subText + \"!\");\n    });\n\n\tvar onHoverAction = function(event) {\n     console.log('Hover action triggered.');\n     $(this).animate({'margin-top': '10px'});\n    };\n\n    var offHoverAction = function(event) {\n     console.log('Off-hover action triggered.');\n     $(this).animate({'margin-top': '0px'});\n    };\n\n    $('.selling-points .point').hover(onHoverAction, offHoverAction);\n\n});\n"]}